worker_processes 1;

events {
    worker_connections 8000;
    multi_accept on;
    use epoll;
}


http {

    server_tokens off;

    sendfile        on;
    tcp_nopush      on;

    tcp_nodelay     off;
    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent" "$gzip_ratio"';

    server {
        listen 8080;
        access_log /var/log/nginx/access.log compression;

        root /var/www;
        index index.html index.htm;

        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires -1;
            # access_log logs/static.log; # I don't usually include a static log
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }

        location /static/ {
            root /var/www;
        }

        location /amazon-dashboard {
            resolver 127.0.0.11 valid=5s;
            set $upstream_endpoint http://app_server:5000;
            rewrite ^/amazon-dashboard(/.*) $1 break;

            proxy_pass         $upstream_endpoint;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
